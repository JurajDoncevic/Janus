@model VisibleSchemasViewModel

@{
    ViewData["Title"] = "Visible Schemas";
}

<h3>Schemas on remote points</h3>

@foreach (var remotePoint in Model.RegisteredRemotePoints)
{
    <div class="accordion" id="remotePointsSchemas">
        <div class="accordion-item">
            <h2 class="accordion-header" id="@remotePoint.NodeId">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@remotePoint.NodeId" aria-expanded="true" aria-controls="collapseOne">
                    @remotePoint.NodeId (@remotePoint.Address, @remotePoint.Port, @remotePoint.RemotePointType)
                </button>
                <button class="btn btn-outline-primary" onclick="getSchema(@remotePoint.NodeId)">Get schema</button>
            </h2>
            <div id="collapse-@remotePoint.NodeId" class="accordion-collapse collapse show" aria-labelledby="collapse-@remotePoint.NodeId" data-bs-parent="#remotePointSchemas">
                <div class="accordion-body">
                    <pre id="schema-@remotePoint.NodeId">

                            </pre>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts
    {
    <script>
        function getSchema(targetNodeId) {
            var xhr = new XMLHttpRequest();
            xhr.open("GET", "/GetSchema/" + targetNodeId, true);
            //xhr.setRequestHeader('Content-Type', 'application/json');
            xhr.send();
            xhr.onload = function () {
                let data = JSON.parse(this.responseText)
                document.getElementById("schema-"targetNodeId).textContent = JSON.stringify(data, undefined, 2);
            }
        }
    </script>
}