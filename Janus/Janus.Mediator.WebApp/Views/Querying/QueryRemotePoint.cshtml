@model QueryRemotePointViewModel
@{
    ViewData["Title"] = "QueryRemotePoint";
}

<h2>Query a remote point</h2>
<div class="row">
    @if (Model.OperationOutcome is not null)
    {
        @if (Model.OperationOutcome.IsSuccess)
        {
            <span class="alert alert-success">@Model.OperationOutcome.Message</span>
        }
        else
        {
            <span class="alert alert-warning">@Model.OperationOutcome.Message</span>
        }
    }
</div>
<div class="row">
    <dr>
        <dl>Registered remote points:</dl>
        <dl><select id="remote-point-select" class="w-auto form-select" style="min-width:25%" onchange="getSelectedSchema(this.value)" asp-items="@(new SelectList(Model.RemotePoints, "NodeId", "String", Model.SelectedRemotePoint))"></select></dl>
    </dr>
    <hr />
</div>

<div class="row">
    <div class="col-6">
        <h3>Query</h3>
        <form asp-action="QueryRemotePoint" method="post" class="w-100">
            <input id="nodeId-form" type="hidden" name="nodeId" value="" />
            <textarea name="queryText" class="form-control" rows="15">@Model.QueryText</textarea>
            <input type="submit" class="btn btn-primary mt-2" value="Run query" />
        </form>
    </div>
    <div class="col-6">
        <h3>Schema</h3>
        <pre id="schema-json" class="schema overflow-scroll form-control" style="min-height:50vh; height:50vh; resize:vertical"></pre>
    </div>
</div>
<hr />
<div class="row">
    <h3>Query results</h3>
    @if (Model.QueryResults is not null && Model.QueryResults.ColumnDataTypes.Count > 0)
    {
        <div class="table-responsive" style="height:50vh">
            <table class="table table-bordered">
                <thead class="table-secondary">
                    <tr>
                        @foreach (var column in Model.QueryResults.ColumnDataTypes)
                        {
                            <th>@column.Key (@column.Value)</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var dataRow in Model.QueryResults.DataRows)
                    {
                        <tr>
                            @foreach (var colName in Model.QueryResults.ColumnDataTypes.Keys)
                            {
                                <td>@dataRow[colName]</td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>


@section Scripts{
    <script>
        function getSchema(targetNodeId) {
            var xhr = new XMLHttpRequest();
            xhr.open("GET", "../GetSchema/" + targetNodeId, true);
            //xhr.setRequestHeader('Content-Type', 'application/json');
            xhr.send();
            xhr.onerror = function () {
                document.getElementById("schema-json").textContent = this.responseText;
            }
            xhr.onload = function () {
                if (xhr.status >= 200 && xhr.status < 300) {
                    let data = JSON.parse(this.responseText)
                    document.getElementById("schema-json").textContent = JSON.stringify(data, undefined, 2);
                    document.getElementById("nodeId-form").setAttribute("value", targetNodeId);
                } else {
                    document.getElementById("schema-json").textContent = this.responseText;
                }
            }
        }
    </script>
    <script>
        function getSelectedSchema(nodeId) {
            getSchema(nodeId);
        }
    </script>
}

